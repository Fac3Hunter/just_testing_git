import logo from "./logo.svg";
import "./App.css";
import React, { useState, useEffect } from "react";
import { nanoid } from "nanoid";
import Product from "./Product";
import Users from "./User";
import Employee from "./Employee";
import "./styles.css";
//import { styles } from "./styles";
import styled from "styled-components";
import styles from "./components/Buttons.module.css";
import jQuery from "jquery";

function App() {
  useEffect(() => {
    document.body.style.backgroundColor = "#000000";
    document.body.style.color = "#ffffff";
  }, []); // –≤—Ç–æ—Ä–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä - –¥–ª—è —Å—Ç–µ–π—Ç–æ–≤, –æ–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–π —Ä–∞–∑ —Å –∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏

  // –ï—Å—Ç—å —Ö—É–∫ –ø–µ—Ä–µ–¥–∞—é—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã

  // –°—É—â–µ—Å—Ç–≤—É—é—Ç –†–µ—Ñ—ã - —ç—Ç–æ —Å—Ç–µ–π—Ç—ã, –Ω–æ —ë–±–Ω—É—Ç—ã–µ –∏ –æ—Ç–ª–∏—á–∏—è –æ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ–ø—Ä–æ–±—É–π –Ω–∞–π–¥–∏
  // —É —ç—Ç–æ–≥–æ —Ö—É–∫–∞ –µ—Å—Ç—å —Å–≤–æ–∏ –≤–∞—Ä–∏–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –≤ —Ä–∞–∑–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –ø—Ä–æ–≥—Ä—É–∑–∫–∏ —Å–∞–π—Ç–∞

  //const str1 = "–ø—Ä–∏–≤–µ—Ç, ";
  //const str2 = "–î—Ä–æ–Ω";
  //
  ////const name = "user";
  ////const age = "30";
  //
  //const arr = [1, 2, 3, 4, 5];
  //
  //const obj = { name: "john", surname: "smit" };
  //
  //const attr = "block";
  //
  //const li1 = <li>text1</li>;
  //const li2 = <li>text2</li>;
  //const li3 = <li>text3</li>;
  //const lis = (
  //  <div>
  //    {li1}
  //    {li2}
  //    {li3}
  //  </div>
  //);
  //
  //const items = (
  //  <>
  //    <li>text1</li>
  //    <li>text2</li>
  //    <li>text3</li>
  //  </>
  //);
  //
  //const num = 4;
  //
  //const isAdult = false;
  //
  //const rslt = isAdult ? <h1>( *)(* )</h1> : <h1>–ê –≤–æ—Ç –∏ –Ω–µ—Ç —Å–∏—Å–µ–∫.</h1>;
  //const isAuth = false;
  //
  //function getDigitsSum(number) {
  //  let sum = 0;
  //  for (let i of String(number)) {
  //    sum += Number(i);
  //  }
  //  return sum;
  //}
  //function show(n) {
  //  alert(n);
  //}
  //function logEvent(event) {
  //  console.log(event.target);
  //}
  //function func(arg, arg2, event) {
  //  console.log(arg, arg2, event.target);
  //}
  //const arr2 = [<li>1</li>, <li>2</li>, <li>3</li>, <li>4</li>, <li>5</li>].map(
  //  function (item, index) {
  //    return <li key={nanoid()}> {item.innerText}</li>;
  //  }
  //); // –ø–æ—Ñ–∏–∫—Å–∏–ª –æ—à–∏–±–∫—É —Å –∫–ª—é—á–∞–º–∏
  //const arr3 = ["a", "b", "c", "d", "e"];
  //
  //const users = [
  //  { id: nanoid(), name: "user1", surn: "surn1", age: 30 },
  //  { id: nanoid(), name: "user2", surn: "surn2", age: 31 },
  //  { id: nanoid(), name: "user3", surn: "surn3", age: 32 },
  //];
  //const usersRmd = users.map(function (item, index) {
  //  return (
  //    <li key={item.id}>
  //      {item.name}:{item.age}
  //    </li>
  //  );
  //});
  //const arr3Rmd = arr3.map(function (item, index) {
  //  return <li key={index}>{item}</li>; // –≤–µ—Ä–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –∏–Ω–¥–µ–∫—Å—ã, –≤–µ—Ä–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å item.id
  //});
  //
  //const [name, setName] = useState("Jhon");
  //const [surName, setSurName] = useState("Doe");
  //const [age, setAge] = useState("19");
  //
  //function changeName(name) {
  //  setName(name);
  //}
  //function changeSurName(name) {
  //  setSurName(name);
  //}
  //const [banned, setBan] = useState(false);
  //
  //const [numSt, setNumSt] = useState(0);
  //
  //const [value, setValue] = useState("smValue");
  //const [value2, setValue2] = useState("smValue2");
  //
  //const [checked, setChecked] = useState(true);
  //const [selectValue, setSelectValue] = useState("–ú—Å–∫");
  //const [radioValue, setRadioValue] = useState("1");
  //
  ////—É—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥
  //let message;
  //if (checked) {
  //  message = (
  //    <>
  //      <h2>–£—Ä–∞, –≤–∞–º —É–∂–µ –µ—Å—Ç—å 18</h2>
  //      <p>–∑–¥–µ—Å—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö</p>
  //    </>
  //  );
  //} else {
  //  message = <p>—É–≤—ã, –≤–∞–º –µ—â–µ –Ω–µ—Ç 18 –ª–µ—Ç:(</p>;
  //}
  //
  //const initDate = {
  //  year: 2025,
  //  month: 12,
  //  day: 31,
  //};
  //const [date, setDate] = useState(initDate);
  //let timeRN = new Date(date.year, date.month, date.day);
  //function handleChange(prop, event) {
  //  setDate({ ...date, ...{ [prop]: event.target.value } });
  //}
  //// –∏–Ω–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å—Ç–µ–π—Ç–∞–º–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –∏ –ø—Ä–∏ –∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–µ –æ–±–Ω–æ–≤–ª—è—Ç—å –∫–∞–∫–æ–π-—Ç–æ —Ç–µ–≥
  //// –¥–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
  //// defaultValue –∏ defaultChecked
  //
  //// —Å–≤–æ–π—Å—Ç–≤–µ–Ω–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –º–∞—Å—Å–∏–≤–∞—Ö –∏ –æ–±—ä–µ–∫—Ç–∞—Ö –Ω–∞ –≤—Å—è–∫–∏—Ö –±–¥
  //// —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ —Å–æ —Å—Ç–µ–π—Ç–∞–º–∏ –ø—Ä–∏–¥—ë—Ç—Å—è –µ–±–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ –æ–±—ä–µ–∫—Ç—ã
  //// –æ–±—ä–µ–∫—Ç—ã –∏ –º–∞—Å—Å–∏–≤—ã –≤ —Ä–µ–∞–∫—Ç–µ –Ω–µ–ª—å–∑—è –º–µ–Ω—è—Ç—å –Ω–∞–ø—Ä—è–º—É—é, –Ω—É–∂–Ω–æ —á—Ç–æ–±—ã –æ–Ω–∏ –æ—Å—Ç–∞–≤–∞–ª–∏—Å—å –∏–º–º—É—Ç–∞–±–µ–ª—å–Ω—ã–º–∏
  //
  //const [notes, setNotes] = useState([1, 2, 3, 4, 5]);
  //const [count, setCount] = useState(6);
  //const initNotes = [
  //  {
  //    id: "GYi9G_uC4gBF1e2SixDvu",
  //    prop1: "value11",
  //    prop2: "value12",
  //    prop3: "value13",
  //  },
  //  {
  //    id: "IWSpfBPSV3SXgRF87uO74",
  //    prop1: "value21",
  //    prop2: "value22",
  //    prop3: "value23",
  //  },
  //  {
  //    id: "JAmjRlfQT8rLTm5tG2m1L",
  //    prop1: "value31",
  //    prop2: "value32",
  //    prop3: "value33",
  //  },
  //];
  //const [notesObj, setObjNotes] = useState(initNotes);
  //
  //const addItem = () => {
  //  setNotes([...notes, count]);
  //  setCount(count + 1);
  //};
  //const addNote = () => {
  //  const newNote = {
  //    id: nanoid(),
  //    prop1: `value${notesObj.length + 1}1`,
  //    prop2: `value${notesObj.length + 1}2`,
  //    prop3: `value${notesObj.length + 1}3`,
  //  };
  //
  //  setObjNotes([...notes, newNote]);
  //};
  //const result = notes.map((note, index) => {
  //  return <li key={index}>{note}</li>;
  //});
  //const users = [
  //  { id: nanoid(), name: "user1", surn: "surn1", age: 30 },
  //  { id: nanoid(), name: "user2", surn: "surn2", age: 31 },
  //  { id: nanoid(), name: "user3", surn: "surn3", age: 32 },
  //];
  //const result = users.map((user) => {
  //  return (
  //    <Users key={user.id} name={user.name} surname={user.surn} age={user.age} />
  //  );
  //});

  const NewP = styled.p`
    background-color: #c2beb7;
    font-size: 40px;
    font-weight: bold;
  `;
  const EvenNewerP = styled(NewP)`
    font-size: 50px;
    color: #ffffff;
    background-color: #211f1c;
  `;
  return (
    <div class="class1">
      <NewP> HAHAHAHAH!</NewP>
      <EvenNewerP> MUAHDHADDAHAHAHHA!</EvenNewerP>
      <Users />

      <Employee name="Jhon" surname="Doe" paycheck="10000" />
    </div>
    //<div>

    //  <p style={styles.class1}>
    //  <Product />
    //</p>
    //  <input type="button" onClick={addNote} />
    //  <ul>
    //    {notesObj.map((note) => (
    //      <li key={note.id}>{`${note.prop1}, ${note.prop2}, ${note.prop3}`}</li>
    //    ))}
    //  </ul>
    //  <input type="button" onClick={addItem} />
    //  <ul>{result}</ul>
    //  <p>{timeRN.getDay()}</p>
    //  <input
    //    value={date.year}
    //    onChange={(event) => {
    //      handleChange("year", event);
    //    }}
    //  />
    //  <input
    //    value={date.month}
    //    onChange={(event) => {
    //      handleChange("month", event);
    //    }}
    //  />
    //  <input
    //    value={date.day}
    //    onChange={(event) => {
    //      handleChange("day", event);
    //    }}
    //  />
    //  <p defaultValue={value}></p>
    //  <input type="checkbox" defaultChecked={checked} />
    //  <input
    //    type="radio"
    //    name="radio"
    //    value="1"
    //    checked={radioValue === "1" ? true : false}
    //    onChange={(event) => {
    //      setRadioValue(event.target.value);
    //    }}
    //  />
    //  <input
    //    type="radio"
    //    name="radio"
    //    value="2"
    //    checked={radioValue === "2" ? true : false}
    //    onChange={(event) => {
    //      setRadioValue(event.target.value);
    //    }}
    //  />
    //  <input
    //    type="radio"
    //    name="radio"
    //    value="3"
    //    checked={radioValue === "3" ? true : false}
    //    onChange={(event) => {
    //      setRadioValue(event.target.value);
    //    }}
    //  />
    //  <p>–ó–¥–µ—Å—å –Ω–∞–ø–∏—Å–∞–Ω–æ {radioValue}</p>
    //  <input
    //    type="checkbox"
    //    checked={checked}
    //    onChange={() => setChecked(!checked)}
    //  />
    //  {message}
    //  <select
    //    value={selectValue}
    //    onChange={(event) => setSelectValue(event.target.value)}
    //  >
    //    <option>–ú—Å–∫</option>
    //    <option>–Æ–ø–∏—Ç–µ—Ä</option>
    //    <option>–ù–æ–≤–æ—Ä–æ—Å—Å</option>
    //    <option>–õ–æ–Ω–¥–æ–Ω</option>
    //  </select>
    //  <p>–í—ã–±—Ä–∞–Ω {selectValue}</p>
    //  <p>{value}</p>
    //  <input value={value} onChange={(event) => setValue(event.target.value)} />
    //  <p>{value2.length}</p>
    //  <input
    //    value={value2}
    //    onChange={(event) => setValue2(event.target.value)}
    //  />
    //  <p>{numSt}</p>
    //  <button onClick={() => setNumSt(numSt + 1)}>–£–≤–µ–ª–∏—á–∏—Ç—å</button>
    //  <button onClick={() => setNumSt(numSt - 1)}>–£–º–µ–Ω—å—à–∏—Ç—å</button>
    //  <p>name: {name}</p>
    //  <p>surName: {surName}</p>
    //  <p>age: {age}</p>
    //
    //  <button onClick={() => changeName("Face")}>Change Name</button>
    //  <button onClick={() => changeSurName("Hunter")}>Change SurName</button>
    //  <p>{banned ? "–Æ–∑–µ—Ä –≤ –±–∞–Ω–µ." : "–Æ–∑–µ—Ä—É –Ω–æ—Ä–º–∞–ª—å–Ω–æ"}</p>
    //  <button onClick={banned ? () => setBan(false) : () => setBan(true)}>
    //    üî®
    //  </button>
    //</div>
    // –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö:
    // –µ—Å–ª–∏ –ø—Ä–∏–¥—ë—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã –≤ –∫–æ–¥–µ, —Ç–æ –∏—Ö —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –Ω–∞ react –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫
    // —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ true –Ω–µ–º–Ω–æ–≥–æ —Ö–∏—Ç—Ä—ã–π, —Ç–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±—É–ª–∏–∞–Ω–æ–≤–∞—è –ª–æ–≥–∏–∫–∞: &&
    // –¥–ª—è false ! smthng && smthng2

    // –û—à–∏–±–∫–∞ " Warning: Each child in an array or iterator should have a unique "key" prop. ", —Ñ–∏–∫—Å–∏—Ç—Å—è –∑–∞–¥–∞—á–µ–π –∫–ª—é—á–µ–π –≤ —Ü–∏–∫–ª–∞—Ö
    //<div>
    //  <h1>{nanoid()}</h1>
    //  <ul>{usersRmd}</ul>
    //  <ul>{arr3Rmd}</ul>
    //  {arr2}
    //  <button onClick={() => show(1)}>act1</button>
    //  <button onClick={(target) => func(1, 2, target)}>three</button>
    //  <button onClick={() => show(2)}>act2</button>
    //  <button onClick={logEvent}>act2</button>
    //  <button onClick={() => show(3)}>act3</button>
    //  {getDigitsSum(1234)}
    //  {isAuth && "–í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã."}
    //  {!isAuth && "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å."}
    //  {rslt}
    //  {isAdult ? <h1>( *)(* )</h1> : <h1>–ê –≤–æ—Ç –∏ –Ω–µ—Ç —Å–∏—Å–µ–∫.</h1>}
    //  result: {Math.sqrt(num)}
    //  <table>
    //    <thead>
    //      <tr>
    //        <td>Hi!</td>
    //        <td>Hi!</td>
    //        <td>Hi!</td>
    //      </tr>
    //    </thead>
    //    <tbody>
    //      <tr>
    //        <td>Dron!</td>
    //        <td>Dron!</td>
    //        <td>Dron!</td>
    //      </tr>
    //    </tbody>
    //    <tfoot>
    //      <tr>
    //        <td>Nogis</td>
    //        <td>Nogis</td>
    //        <td>Nogis</td>
    //      </tr>
    //    </tfoot>
    //  </table>
    //  <input /> <br />
    //  <input /> <br />
    //  <input /> <br />
    //  {lis}
    //  <p id={attr}>{str1}</p>
    //  <p>{str2}</p>
    //  name: {name}
    //  <br></br>
    //  age: {age}
    //  <ul>
    //    <li>{arr[0]}</li>
    //    <li>{arr[1]}</li>
    //    <li>{arr[2]}</li>
    //    <li>{arr[3]}</li>
    //    <li>{arr[4]}</li>
    //  </ul>
    //  <p>
    //    name: <span>{obj.name}</span>, <br />
    //    surname: <span>{obj.surname}</span>,
    //  </p>
    //</div>

    // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–π —Ç–µ–≥, —Ç–æ –Ω–∞–¥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–∞–∫—Ä—ã—Ç—É—é –≤–µ—Ä—Å–∏—é:
    //<input />
    // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –ø—É—Å—Ç–æ–π —Ç–µ–≥, —Ç–æ —Ç–∞ –∂–µ —Å—Ö–µ–º–∞
    //<>
    //  <input />
    //  <input />
    //  <input />
    //</>
    // –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å —Å–∫–æ–±–æ—á–∫—É –∏ –≤–µ—Å—å –ø–µ—Ä–≤—ã–π —Ç–µ–≥ –≤–µ—Ä–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑ —Ä–µ—Ç—ë—Ä–Ω
    //<>
    //  <ul>
    //    <li>text1</li>
    //    <li>text2</li>
    //    <li>text3</li>
    //  </ul>
    //  <ul>
    //    <li>text1</li>
    //    <li>text2</li>
    //    <li>text3</li>
    //  </ul>
    //</> // —ç—Ç–∏ –ø—É—Å—Ç—ã–µ —Ç–µ–≥–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ–≥–æ–≤ –Ω–µ –∑–∞–¥–∞–≤–∞—è –∏–º –æ–±—â–µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è, —á—Ç–æ –º–æ–∂–µ—Ç —Å–ª–æ–º–∞—Ç—å –≤—ë—Ä—Å—Ç–∫—É
    //<div>
    //  <p class="firstComp">–û—Å–Ω–æ–≤–Ω–æ–π –ö–æ–º–ø–æ–Ω–µ–Ω—Ç</p>
    //  <p class="secondComp">–û—Å–Ω–æ–≤–Ω–æ–π –ö–æ–º–ø–æ–Ω–µ–Ω—Ç2</p>
    //  <p>–û—Å–Ω–æ–≤–Ω–æ–π –ö–æ–º–ø–æ–Ω–µ–Ω—Ç3</p>
    //</div>
  );
}

export default App;
